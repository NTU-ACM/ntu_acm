\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8}]
by claris
读新题的优先级高于一切
读完题之后必须看一遍clarification
交题之前必须看一遍clarification
可能有SPJ的题目提交前也应该尽量做到与样例输出完全一致
WA时需要检查INF是否设小
构造题不可开场做
每道题需至少有两个人确认题意
上机之前做法需得到队友确认
带有猜想性质的算法应放后面写
当发现题目不会做但是过了一片时应冲一发暴力
将待写的题按所需时间放入小根堆中，每次选堆顶的题目写
交完题目后立马打印随后让出机器
写题超过半小时应考虑是否弃题
细节、公式等在上机前应在草稿纸上准备好，防止上机后越写越乱
提交题目之前应检查solve(n,m)是否等于solve(m,n)
检查是否所有东西都已经清空
对于中后期题应该考虑一人写题，另一人在一旁辅助，及时发现手误
最后半小时不能慌张
对于取模的题，在输出之前一定要再取模一次进行保险
对于舍入输出，若abs不超过eps，需要强行设置为0来防止−0.0000的出现。

by SJTU\PYGZus{}dreadnought
现行基本战术：

前期[1\PYGZti{}2h]：水题还没写完
Bacon和Lolicon快速读题、写题、过题。
Rowdark视情况补题。面对水题较多的时候补。需要debug的时候优先查错。如果Rowdark自己挂弃题要果断。

中期[2\PYGZti{}4h]：解决中档题
Bacon和Lolicon轮换写题。在机下尽量准备好。帮助Rowdark想一些算法。
Rowdark遇到自己特别擅长的上机补题。想算法，查错。

后期[3\PYGZti{}5h]：攻坚后期题
时间乐观时可以一人一题分做。时间紧张时优先把握大的题。先空出来的人辅助还没完成的人。包括想法、细节、查错、拼代码等各方面。
前期要做到速度快，准确度高，尽量不查错。中期则要把握好出题的节奏，稳出中期题。后期则要通力配合，顽强拼搏。
所谓战术，就是比赛当中工作的分配。ACM基本需要完成的任务有代码、算法、辅助、统筹。经过讨论，我们想出了6套不同的战术，主要区别在于代码任务的分配。

(B = Bacon H = Rowdark L = Lolicon X = Anyone)
战术名: 单刀	
示例代码分配:X:100\PYGZpc{}	
基本思路:	 一人负责所有代码，另外两人全力算法+辅	助 
可能优势: 算法和辅助能力高	
可能劣势: 比较吃代码手状态	
变化: 更换代码手

战术名: 双刀	
示例代码分配:L:50\PYGZpc{} B:50\PYGZpc{}	
基本思路:	 L/B分摊代码。H统筹+算法+辅助，不上题
可能优势: 代码输出较高，各方面较均衡 
可能劣势: 算法和辅助略有不足	
变化: 根据情况调整L/B代码比例

战术名: 双刃	
示例代码分配:L:45\PYGZpc{} B:45\PYGZpc{} H:10\PYGZpc{}	 
基本思路: L/B分摊绝大部分代码。H也偶尔上题。	
可能优势: 代码输出高	
可能劣势: 算法和辅助较有不足	
变化:控制H上题时机和时间

战术名: 双刃改	 
示例代码分配:L:40\PYGZpc{} B:40\PYGZpc{} H:20\PYGZpc{}	
基本思路:	 L/B分摊大部分代码。H上题。L/B相互辅助	
可能优势: 代码输出较高，弥补辅助不足	
可能劣势: 缺少中心化统筹，需要多交	流 
L/B也可相互帮助一定算法

战术名: 偏锋	
示例代码分配: X:60\PYGZpc{} X:30\PYGZpc{} X:10\PYGZpc{}	 
基本思路: 一人主写代码，一人兼职，一人主算法辅助	
可能优势: 均衡，灵活，不容易吃个人状态 
可能劣势: 代码输出相对较慢	
变化: 容易在其他战术之间调整

战术名: 三刀	
示例代码分配:H:33\PYGZpc{} L:33\PYGZpc{} B:33\PYGZpc{}	
基本思路: 三人较为独立，各自做题+自修理	
可能优势: 最大化代码输出	
可能劣势: 缺少统筹辅助，容易崩盘	
变化: 交换题目实现一定调整
\end{Verbatim}
