\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8}]
const int maxn = 10005;   //点的最大个数

int head[maxn], cnt=0;//head用来表示以i为起点的第一条边存储的位置，cnt读入边的计数器

struct Edge \PYGZob{}
	int next; //同一起点的上一条边的储存位置
	int to; //第i条边的终点
	int w; //第i条边权重
\PYGZcb{};

Edge edge[maxn];

void addedge(int u,int v,int w) \PYGZob{}
	edge[cnt].w = w;
	edge[cnt].to = v;
	edge[cnt].next = head[u];
	head[u] = cnt++;
\PYGZcb{}

void traverse() \PYGZob{}
	for(int i=0; i\PYGZlt{}=n; i++) \PYGZob{}
		for(int j=head[i]; j！=\PYGZhy{}1; j=edge[j].next) \PYGZob{}
			std::cout \PYGZlt{}\PYGZlt{} i \PYGZlt{}\PYGZlt{} \PYGZdq{} \PYGZdq{} \PYGZlt{}\PYGZlt{} head[i].to \PYGZlt{}\PYGZlt{} \PYGZdq{} \PYGZdq{} \PYGZlt{}\PYGZlt{} head[i].w \PYGZlt{}\PYGZlt{} \PYGZsq{}\PYGZbs{}n\PYGZsq{};
		\PYGZcb{}
	\PYGZcb{}
\PYGZcb{}
\end{Verbatim}
